// Fun√ß√£o para for√ßar o uso da API real e limpar completamente o modo mock

export const forceRealAPIMode = () => {
  console.log('üöÄ FOR√áANDO USO DA API REAL...');
  
  // 1. Limpar TODOS os dados relacionados ao mock
  console.log('üßπ Limpando dados mock...');
  localStorage.removeItem('vur_use_mock_api');
  localStorage.removeItem('mock_user');
  localStorage.removeItem('mock_token');
  
  // 2. Limpar dados de autentica√ß√£o existentes
  console.log('üßπ Limpando dados de auth...');
  localStorage.removeItem('vur_auth_token');
  localStorage.removeItem('vur_token_expiry');
  
  // 3. Limpar qualquer outro dado VUR
  console.log('üßπ Limpando outros dados VUR...');
  Object.keys(localStorage).forEach(key => {
    if (key.startsWith('vur_') || key.startsWith('mock_')) {
      localStorage.removeItem(key);
    }
  });
  
  // 4. Desabilitar detec√ß√£o autom√°tica e for√ßar API real
  localStorage.setItem('vur_disable_mock_detection', 'true');
  localStorage.setItem('vur_force_real_api', 'true');

  console.log('‚úÖ Limpeza completa realizada!');
  console.log('üöÄ Detec√ß√£o autom√°tica de mock DESABILITADA');
  console.log('üîÑ Redirecionando para login...');

  // 5. Redirecionar para p√°gina de login
  window.location.href = '/auth';
};

// Fun√ß√£o para verificar se deve for√ßar API real
export const shouldForceRealAPI = (): boolean => {
  return localStorage.getItem('vur_force_real_api') === 'true';
};

// Fun√ß√£o para limpar flag de for√ßa
export const clearForceRealAPI = () => {
  localStorage.removeItem('vur_force_real_api');
};

// Expor globalmente para uso no console
if (typeof window !== 'undefined') {
  (window as any).FORCE_REAL_API = forceRealAPIMode;
  console.log('üõ†Ô∏è Fun√ß√£o FORCE_REAL_API() dispon√≠vel no console');
}
