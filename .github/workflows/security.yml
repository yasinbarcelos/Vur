name: 🔐 Security & Vulnerability Scan

on:
  schedule:
    - cron: '0 6 * * 1'  # Segunda-feira às 6h
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # ==========================================
  # 🔍 DEPENDENCY VULNERABILITY SCAN
  # ==========================================
  dependency-scan:
    name: 🔍 Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        component: [backend, frontend]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Backend Python vulnerabilities
      - name: Python Security Scan
        if: matrix.component == 'backend'
        uses: pypa/gh-action-pip-audit@v1.0.8
        with:
          inputs: backend/requirements.txt
          format: sarif
          output: backend-vulnerabilities.sarif

      # Frontend NPM vulnerabilities  
      - name: NPM Security Audit
        if: matrix.component == 'frontend'
        working-directory: ./frontend
        run: |
          npm audit --audit-level=moderate
          npm audit --json > npm-audit.json || true

      - name: Upload SARIF results
        if: matrix.component == 'backend'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: backend-vulnerabilities.sarif

  # ==========================================
  # 🔐 CODEQL SECURITY ANALYSIS
  # ==========================================
  codeql-scan:
    name: 🔐 CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      matrix:
        language: [ 'python', 'javascript' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # ==========================================
  # 🐳 DOCKER IMAGE SECURITY SCAN
  # ==========================================
  docker-security:
    name: 🐳 Docker Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    strategy:
      matrix:
        component: [backend, frontend]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t vur-${{ matrix.component }}:test ./${{ matrix.component }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'vur-${{ matrix.component }}:test'
          format: 'sarif'
          output: 'trivy-${{ matrix.component }}.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-${{ matrix.component }}.sarif'

  # ==========================================
  # 📊 SECURITY SUMMARY
  # ==========================================
  security-summary:
    name: 📊 Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-scan, codeql-scan, docker-security]
    if: always()
    
    steps:
      - name: Security Status Summary
        run: |
          echo "🔐 Security Scan Results:"
          echo "- Dependency Scan: ${{ needs.dependency-scan.result }}"
          echo "- CodeQL Analysis: ${{ needs.codeql-scan.result }}" 
          echo "- Docker Security: ${{ needs.docker-security.result }}" 